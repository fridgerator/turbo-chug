/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fridgerator.avro.transactions;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Futurama extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6696643611185909793L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Futurama\",\"namespace\":\"com.fridgerator.avro.transactions\",\"fields\":[{\"name\":\"character\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hermesCatchPhrase\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"location\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"quote\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"id\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Futurama> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Futurama> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Futurama> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Futurama> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Futurama> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Futurama to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Futurama from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Futurama instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Futurama fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String character;
  private java.lang.String hermesCatchPhrase;
  private java.lang.String location;
  private java.lang.String quote;
  private double id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Futurama() {}

  /**
   * All-args constructor.
   * @param character The new value for character
   * @param hermesCatchPhrase The new value for hermesCatchPhrase
   * @param location The new value for location
   * @param quote The new value for quote
   * @param id The new value for id
   */
  public Futurama(java.lang.String character, java.lang.String hermesCatchPhrase, java.lang.String location, java.lang.String quote, java.lang.Double id) {
    this.character = character;
    this.hermesCatchPhrase = hermesCatchPhrase;
    this.location = location;
    this.quote = quote;
    this.id = id;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return character;
    case 1: return hermesCatchPhrase;
    case 2: return location;
    case 3: return quote;
    case 4: return id;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: character = value$ != null ? value$.toString() : null; break;
    case 1: hermesCatchPhrase = value$ != null ? value$.toString() : null; break;
    case 2: location = value$ != null ? value$.toString() : null; break;
    case 3: quote = value$ != null ? value$.toString() : null; break;
    case 4: id = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'character' field.
   * @return The value of the 'character' field.
   */
  public java.lang.String getCharacter() {
    return character;
  }


  /**
   * Sets the value of the 'character' field.
   * @param value the value to set.
   */
  public void setCharacter(java.lang.String value) {
    this.character = value;
  }

  /**
   * Gets the value of the 'hermesCatchPhrase' field.
   * @return The value of the 'hermesCatchPhrase' field.
   */
  public java.lang.String getHermesCatchPhrase() {
    return hermesCatchPhrase;
  }


  /**
   * Sets the value of the 'hermesCatchPhrase' field.
   * @param value the value to set.
   */
  public void setHermesCatchPhrase(java.lang.String value) {
    this.hermesCatchPhrase = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public java.lang.String getLocation() {
    return location;
  }


  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(java.lang.String value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'quote' field.
   * @return The value of the 'quote' field.
   */
  public java.lang.String getQuote() {
    return quote;
  }


  /**
   * Sets the value of the 'quote' field.
   * @param value the value to set.
   */
  public void setQuote(java.lang.String value) {
    this.quote = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public double getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(double value) {
    this.id = value;
  }

  /**
   * Creates a new Futurama RecordBuilder.
   * @return A new Futurama RecordBuilder
   */
  public static com.fridgerator.avro.transactions.Futurama.Builder newBuilder() {
    return new com.fridgerator.avro.transactions.Futurama.Builder();
  }

  /**
   * Creates a new Futurama RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Futurama RecordBuilder
   */
  public static com.fridgerator.avro.transactions.Futurama.Builder newBuilder(com.fridgerator.avro.transactions.Futurama.Builder other) {
    if (other == null) {
      return new com.fridgerator.avro.transactions.Futurama.Builder();
    } else {
      return new com.fridgerator.avro.transactions.Futurama.Builder(other);
    }
  }

  /**
   * Creates a new Futurama RecordBuilder by copying an existing Futurama instance.
   * @param other The existing instance to copy.
   * @return A new Futurama RecordBuilder
   */
  public static com.fridgerator.avro.transactions.Futurama.Builder newBuilder(com.fridgerator.avro.transactions.Futurama other) {
    if (other == null) {
      return new com.fridgerator.avro.transactions.Futurama.Builder();
    } else {
      return new com.fridgerator.avro.transactions.Futurama.Builder(other);
    }
  }

  /**
   * RecordBuilder for Futurama instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Futurama>
    implements org.apache.avro.data.RecordBuilder<Futurama> {

    private java.lang.String character;
    private java.lang.String hermesCatchPhrase;
    private java.lang.String location;
    private java.lang.String quote;
    private double id;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fridgerator.avro.transactions.Futurama.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.character)) {
        this.character = data().deepCopy(fields()[0].schema(), other.character);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.hermesCatchPhrase)) {
        this.hermesCatchPhrase = data().deepCopy(fields()[1].schema(), other.hermesCatchPhrase);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.quote)) {
        this.quote = data().deepCopy(fields()[3].schema(), other.quote);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.id)) {
        this.id = data().deepCopy(fields()[4].schema(), other.id);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing Futurama instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fridgerator.avro.transactions.Futurama other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.character)) {
        this.character = data().deepCopy(fields()[0].schema(), other.character);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.hermesCatchPhrase)) {
        this.hermesCatchPhrase = data().deepCopy(fields()[1].schema(), other.hermesCatchPhrase);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.quote)) {
        this.quote = data().deepCopy(fields()[3].schema(), other.quote);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.id)) {
        this.id = data().deepCopy(fields()[4].schema(), other.id);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'character' field.
      * @return The value.
      */
    public java.lang.String getCharacter() {
      return character;
    }


    /**
      * Sets the value of the 'character' field.
      * @param value The value of 'character'.
      * @return This builder.
      */
    public com.fridgerator.avro.transactions.Futurama.Builder setCharacter(java.lang.String value) {
      validate(fields()[0], value);
      this.character = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'character' field has been set.
      * @return True if the 'character' field has been set, false otherwise.
      */
    public boolean hasCharacter() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'character' field.
      * @return This builder.
      */
    public com.fridgerator.avro.transactions.Futurama.Builder clearCharacter() {
      character = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'hermesCatchPhrase' field.
      * @return The value.
      */
    public java.lang.String getHermesCatchPhrase() {
      return hermesCatchPhrase;
    }


    /**
      * Sets the value of the 'hermesCatchPhrase' field.
      * @param value The value of 'hermesCatchPhrase'.
      * @return This builder.
      */
    public com.fridgerator.avro.transactions.Futurama.Builder setHermesCatchPhrase(java.lang.String value) {
      validate(fields()[1], value);
      this.hermesCatchPhrase = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'hermesCatchPhrase' field has been set.
      * @return True if the 'hermesCatchPhrase' field has been set, false otherwise.
      */
    public boolean hasHermesCatchPhrase() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'hermesCatchPhrase' field.
      * @return This builder.
      */
    public com.fridgerator.avro.transactions.Futurama.Builder clearHermesCatchPhrase() {
      hermesCatchPhrase = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public java.lang.String getLocation() {
      return location;
    }


    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public com.fridgerator.avro.transactions.Futurama.Builder setLocation(java.lang.String value) {
      validate(fields()[2], value);
      this.location = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public com.fridgerator.avro.transactions.Futurama.Builder clearLocation() {
      location = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'quote' field.
      * @return The value.
      */
    public java.lang.String getQuote() {
      return quote;
    }


    /**
      * Sets the value of the 'quote' field.
      * @param value The value of 'quote'.
      * @return This builder.
      */
    public com.fridgerator.avro.transactions.Futurama.Builder setQuote(java.lang.String value) {
      validate(fields()[3], value);
      this.quote = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'quote' field has been set.
      * @return True if the 'quote' field has been set, false otherwise.
      */
    public boolean hasQuote() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'quote' field.
      * @return This builder.
      */
    public com.fridgerator.avro.transactions.Futurama.Builder clearQuote() {
      quote = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public double getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.fridgerator.avro.transactions.Futurama.Builder setId(double value) {
      validate(fields()[4], value);
      this.id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.fridgerator.avro.transactions.Futurama.Builder clearId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Futurama build() {
      try {
        Futurama record = new Futurama();
        record.character = fieldSetFlags()[0] ? this.character : (java.lang.String) defaultValue(fields()[0]);
        record.hermesCatchPhrase = fieldSetFlags()[1] ? this.hermesCatchPhrase : (java.lang.String) defaultValue(fields()[1]);
        record.location = fieldSetFlags()[2] ? this.location : (java.lang.String) defaultValue(fields()[2]);
        record.quote = fieldSetFlags()[3] ? this.quote : (java.lang.String) defaultValue(fields()[3]);
        record.id = fieldSetFlags()[4] ? this.id : (java.lang.Double) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Futurama>
    WRITER$ = (org.apache.avro.io.DatumWriter<Futurama>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Futurama>
    READER$ = (org.apache.avro.io.DatumReader<Futurama>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.character);

    out.writeString(this.hermesCatchPhrase);

    out.writeString(this.location);

    out.writeString(this.quote);

    out.writeDouble(this.id);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.character = in.readString();

      this.hermesCatchPhrase = in.readString();

      this.location = in.readString();

      this.quote = in.readString();

      this.id = in.readDouble();

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.character = in.readString();
          break;

        case 1:
          this.hermesCatchPhrase = in.readString();
          break;

        case 2:
          this.location = in.readString();
          break;

        case 3:
          this.quote = in.readString();
          break;

        case 4:
          this.id = in.readDouble();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










