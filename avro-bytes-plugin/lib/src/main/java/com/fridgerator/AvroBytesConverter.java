/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.fridgerator;

import java.util.Map;
import java.util.HashMap;

import org.apache.avro.io.BinaryDecoder;
import org.apache.avro.io.DecoderFactory;
import org.apache.avro.specific.SpecificDatumReader;
import org.apache.avro.specific.SpecificRecordBase;
import org.apache.kafka.connect.data.Schema;
import org.apache.kafka.connect.data.SchemaAndValue;
import org.apache.kafka.connect.storage.Converter;

public class AvroBytesConverter<T extends SpecificRecordBase> implements Converter {

    private static final String STATIC_SCHEMA_FIELD_NAME = "SCHEMA$";
    private String serdeClassPath;

    @Override
    public void configure(Map<String, ?> configs, boolean isKey) {
        if (isKey) return;
        if (!configs.containsKey("serde-class-path")) {
            throw new UnsupportedOperationException("No serde-class-path, please set value.converter.serde-class-path");
        }
        serdeClassPath = (String) configs.get("serde-class-path");
    }

    @Override
    public byte[] fromConnectData(String topic, Schema schema, Object value) {
        // TODO Auto-generated method stub
        throw new UnsupportedOperationException("Unimplemented method 'fromConnectData'");
    }

    @Override
    public SchemaAndValue toConnectData(String topic, byte[] value) {
        Class aClass;
        org.apache.avro.Schema schema;

        try {
            aClass = Class.forName(serdeClassPath);
            schema = (org.apache.avro.Schema) aClass.getField(STATIC_SCHEMA_FIELD_NAME).get(aClass);
        } catch (Exception e) {
            throw new UnsupportedOperationException("oops " + e);
        }

        SpecificDatumReader<T> datumReader = new SpecificDatumReader<>(schema);
        BinaryDecoder decoder = DecoderFactory.get().binaryDecoder(value, null);
        T record;
        Map<String, Object> map = new HashMap<>();
        try {
            record = datumReader.read(null, decoder);
            schema.getFields().forEach(field ->
                map.put(field.name(), record.get(field.name())));
            return new SchemaAndValue(null, map);
        } catch (Exception e) {
            System.out.println("oops : {}" + e);
        }

        throw new UnsupportedOperationException("Could not convert avro bytes record to Kafka Connect object");
    }
}
